{"version":3,"sources":["../../src/lib/report-html.js"],"names":["baseSemanticAssets","assetsList","concat","map","join","apply","el","copyAsset","outputDir","assetName","srcfileReady","__dirname","createDestDir","dirname","destFileWritten","data","Promise","all","then","srcFileData","res","copyAssets","bind","renderHTMLReport","opt","filename","indexOf","reject","Error","projectDir","relativeToFilename","prefixDir","dest","relative","prefixAssets","filePath","summaryReportContent","toRelative","reportFilePath","reportFileContent","renderToStaticMarkup","createElement","htmlTemplateOptions","coverageGeneratedAt","coverageSummaryData","assets","css","js","resolve","sourceReportContent","srcPath","dirName","coverageData","fileName","fileContent","buff","summaryRelLink","threshold","waitForReportContent","type","Buffer","from","generateFlowCoverageReportHTML","opts","generatedAt","generateSummary","waitForCopyAssets","generateSourceFiles","Object","keys","files","render","generate"],"mappings":"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","file":"report-html.js","sourcesContent":["'use strict';\n\n// @flow\n\nimport path from 'path';\nimport React from 'react';\nimport react from 'react-dom/server';\n\nimport {mkdirp, readFile, writeFile} from './promisified';\nimport {HTMLReportSummaryPage, HTMLReportSourceFilePage} from './components/html-report-page'; // eslint-disable-line import/no-unresolved\n\nimport type {FlowCoverageSummaryData} from './flow';\nimport type {FlowCoverageReportOptions} from './index';\n\nconst baseSemanticAssets = ['themes', 'default', 'assets'];\nconst assetsList = [\n  'jquery-3.1.0.min.js',\n  'semantic.min.js',\n  'semantic.min.css',\n  'semantic-tablesort.js',\n  'index.js',\n  'codemirror.js',\n  'codemirror.css',\n  'codemirror-javascript-mode.js',\n  'codemirror-annotatescrollbar-addon.js',\n  'codemirror-simplescrollbars-addon.js',\n  'codemirror-simplescrollbars-addon.css',\n  'flow-highlight-source.js',\n  'flow-highlight-source.css',\n  'flow-coverage-report.css'\n].concat([\n  ['images', 'flags.png'],\n  ['fonts', 'icons.eot'],\n  ['fonts', 'icons.otf'],\n  ['fonts', 'icons.svg'],\n  ['fonts', 'icons.ttf'],\n  ['fonts', 'icons.woff'],\n  ['fonts', 'icons.woff2']\n].map(el => {\n  return path.join.apply(null, baseSemanticAssets.concat(el));\n}));\n\nfunction copyAsset(outputDir, assetName) {\n  const srcfileReady = readFile(path.join(__dirname, '..', '..', 'assets', assetName));\n  const createDestDir = mkdirp(path.join(outputDir, 'assets', path.dirname(assetName)));\n\n  function destFileWritten(data) {\n    return writeFile(path.join(outputDir, 'assets', assetName), data);\n  }\n\n  return Promise.all([\n    srcfileReady, createDestDir\n  ]).then(res => {\n    const srcFileData = res[0];\n\n    return destFileWritten(srcFileData);\n  });\n}\n\nfunction copyAssets(outputDir/* : string */) {\n  return Promise.all(assetsList.map(copyAsset.bind(null, outputDir)));\n}\n\nfunction renderHTMLReport(opt/* : Object */)/* : Promise<*> */ {\n  if (opt.filename &&\n      opt.filename.indexOf('..') >= 0) {\n    return Promise.reject(new Error(\n      'filename is not relative to the projectDir: ' +\n        [opt.projectDir, opt.filename].join(' - ')\n    ));\n  }\n\n  function relativeToFilename(prefixDir, dest) {\n    return path.relative(path.join(prefixDir, path.dirname(opt.filename || '')), dest);\n  }\n\n  function prefixAssets(filePath) {\n    return path.join('assets', filePath);\n  }\n\n  function summaryReportContent() {\n    return new Promise(resolve => {\n      const toRelative = relativeToFilename.bind(null, '');\n\n      const reportFilePath = path.join(opt.outputDir, 'index.html');\n      const reportFileContent = '<!DOCTYPE html>\\n' +\n        react.renderToStaticMarkup(React.createElement(HTMLReportSummaryPage, {\n          htmlTemplateOptions: opt.htmlTemplateOptions,\n          coverageGeneratedAt: opt.coverageGeneratedAt,\n          coverageSummaryData: opt.coverageSummaryData,\n          assets: {\n            css: [\n              'semantic.min.css',\n              'flow-coverage-report.css'\n            ].map(prefixAssets).map(toRelative),\n            js: [\n              'jquery-3.1.0.min.js',\n              'semantic.min.js',\n              'semantic-tablesort.js',\n              'index.js'\n            ].map(prefixAssets).map(toRelative)\n          }\n        }));\n\n      resolve({\n        reportFilePath,\n        reportFileContent\n      });\n    });\n  }\n\n  function sourceReportContent() {\n    return new Promise((resolve, reject) => {\n      const srcPath = path.join(opt.projectDir, opt.filename);\n      const dirName = path.dirname(opt.filename);\n      const toRelative = relativeToFilename.bind(null, 'sourcefiles');\n\n      return mkdirp(path.join(opt.outputDir, 'sourcefiles', dirName)).then(() => {\n        return readFile(srcPath).then(buff => {\n          const reportFileContent = '<!DOCTYPE html>\\n' +\n                react.renderToStaticMarkup(React.createElement(HTMLReportSourceFilePage, {\n                  htmlTemplateOptions: opt.htmlTemplateOptions,\n                  coverageGeneratedAt: opt.coverageGeneratedAt,\n                  coverageSummaryData: opt.coverageSummaryData,\n                  coverageData: opt.coverageData,\n                  fileName: opt.filename,\n                  fileContent: buff,\n                  summaryRelLink: toRelative('index.html'),\n                  threshold: opt.threshold,\n                  assets: {\n                    css: [\n                      'semantic.min.css',\n                      'codemirror.css',\n                      'flow-highlight-source.css',\n                      'flow-coverage-report.css',\n                      'codemirror-simplescrollbars-addon.css'\n                    ].map(prefixAssets).map(toRelative),\n                    js: [\n                      'jquery-3.1.0.min.js',\n                      'semantic.min.js',\n                      'semantic-tablesort.js',\n                      'codemirror.js',\n                      'codemirror-javascript-mode.js',\n                      'codemirror-annotatescrollbar-addon.js',\n                      'codemirror-simplescrollbars-addon.js',\n                      'flow-highlight-source.js',\n                      'index.js'\n                    ].map(prefixAssets).map(toRelative)\n                  }\n                }));\n\n          const reportFilePath = path.join(opt.outputDir, 'sourcefiles', opt.filename) + '.html';\n          resolve({\n            reportFilePath,\n            reportFileContent\n          });\n        }, reject);\n      }, reject);\n    });\n  }\n\n  let waitForReportContent;\n\n  switch (opt.type) {\n    case 'summary':\n      waitForReportContent = summaryReportContent();\n      break;\n    case 'sourcefile':\n      waitForReportContent = sourceReportContent();\n      break;\n    default:\n      return Promise.reject(new Error('Unknown report type: ' + opt.type));\n  }\n\n  return waitForReportContent.then(res => {\n    const reportFilePath = res.reportFilePath;\n    const reportFileContent = res.reportFileContent;\n\n    return mkdirp(path.dirname(reportFilePath)).then(() => {\n      return writeFile(reportFilePath, Buffer.from(reportFileContent));\n    });\n  });\n}\n\nfunction generateFlowCoverageReportHTML(\n  coverageSummaryData: FlowCoverageSummaryData,\n  opts: FlowCoverageReportOptions\n) {\n  const projectDir = opts.projectDir;\n  const outputDir = opts.outputDir;\n\n  if (!outputDir) {\n    throw new Error('Unexpected empty outputDir option');\n  }\n\n  const coverageGeneratedAt = coverageSummaryData.generatedAt;\n  const generateSummary = renderHTMLReport({\n    type: 'summary',\n    filename: null,\n    htmlTemplateOptions: opts.htmlTemplateOptions,\n    coverageSummaryData,\n    coverageGeneratedAt,\n    projectDir,\n    outputDir\n  });\n\n  const waitForCopyAssets = copyAssets(outputDir);\n  const generateSourceFiles = Object.keys(coverageSummaryData.files)\n        .map(filename => {\n          const coverageData = coverageSummaryData.files[filename];\n          return renderHTMLReport({\n            type: 'sourcefile',\n            coverageGeneratedAt,\n            htmlTemplateOptions: opts.htmlTemplateOptions,\n            coverageSummaryData,\n            projectDir,\n            filename,\n            coverageData,\n            outputDir\n          });\n        });\n  return Promise.all(\n    [\n      waitForCopyAssets,\n      generateSummary\n    ].concat(generateSourceFiles)\n  );\n}\n\nexport default {\n  assetsList,\n  copyAssets,\n  render: renderHTMLReport,\n  generate: generateFlowCoverageReportHTML\n};\n"]}