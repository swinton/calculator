{"version":3,"sources":["../../../src/lib/components/coverage-file-table-row.jsx"],"names":["FlowCoverageFileTableRow","LinkToSourceFileReport","props","filename","targetFilename","href","annotation","covered_count","uncovered_count","percent","isError","disableLink","threshold","isFlow","aboveThreshold","className","errorPopup","errorType","errorContent","flowCoverageError","flowCoverageParsingError","flowCoverageException","flowCoverageStderr"],"mappings":"AAAA;;;;;kBAYwBA,wB;;AARxB;;;;;;AAEA,SAASC,sBAAT,CAAgCC,KAAhC,EAAiE;AAC/D,MAAMC,WAAWD,MAAME,cAAvB;AACA,MAAMC,wBAAsBF,QAAtB,UAAN;AACA,SAAO;AAAA;AAAA,MAAG,MAAME,IAAT;AAAgBF;AAAhB,GAAP;AACD,CAEc,SAASH,wBAAT,CACbE,KADa,EAeb;AACA;AADA,MAGEC,QAHF,GAWID,KAXJ,CAGEC,QAHF;AAAA,MAIEG,UAJF,GAWIJ,KAXJ,CAIEI,UAJF;AAAA,MAKEC,aALF,GAWIL,KAXJ,CAKEK,aALF;AAAA,MAMEC,eANF,GAWIN,KAXJ,CAMEM,eANF;AAAA,MAOEC,OAPF,GAWIP,KAXJ,CAOEO,OAPF;AAAA,MAQEC,OARF,GAWIR,KAXJ,CAQEQ,OARF;AAAA,MASEC,WATF,GAWIT,KAXJ,CASES,WATF;AAAA,MAUEC,SAVF,GAWIV,KAXJ,CAUEU,SAVF;;;AAaA,MAAMC,SAASP,eAAe,MAA9B;AACA,MAAMQ,iBAAiBL,WAAWG,SAAlC;AACA,MAAIG,YAAa,CAACL,OAAD,IAAYG,MAAZ,IAAsBC,cAAvB,GACd,UADc,GACD,UADf;;AAGA,MAAIE,mBAAJ;;AAEA,MAAIN,OAAJ,EAAa;AACXK,gBAAY,OAAZ;AACA,QAAIE,kBAAJ;AACA,QAAIC,qBAAJ;;AAEA,QAAIhB,MAAMiB,iBAAV,EAA6B;AAC3BF,kBAAY,eAAZ;AACAC,qBAAe;AAAA;AAAA;AAAMhB,cAAMiB;AAAZ,OAAf;AACD;;AAED,QAAIjB,MAAMkB,wBAAV,EAAoC;AAClCH,kBAAY,cAAZ;AACAC,qBAAe;AAAA;AAAA;AAAMhB,cAAMkB;AAAZ,OAAf;AACD;;AAED,QAAIlB,MAAMmB,qBAAV,EAAiC;AAC/BJ,kBAAY,+BAAZ;AACAC,qBAAe;AAAA;AAAA;AAAMhB,cAAMmB;AAAZ,OAAf;AACD;;AAED,QAAInB,MAAMoB,kBAAV,EAA8B;AAC5BL,kBAAY,qBAAZ;AACAC,qBAAe;AAAA;AAAA;AAAMhB,cAAMoB;AAAZ,OAAf;AACD;;AAEDN,iBACE;AAAA;AAAA,QAAK,WAAU,UAAf;AACE;AAAA;AAAA,UAAK,WAAU,QAAf;AAAA;AAAqCC;AAArC,OADF;AAEE;AAAA;AAAA;AAAMC;AAAN;AAFF,KADF;AAMD;;AAED,SACE;AAAA;AAAA,MAAI,KAAKf,QAAT,EAAmB,WAAWY,SAA9B;AACE;AAAA;AAAA,QAAI,KAAI,UAAR,EAAmB,WAAWJ,cAAc,EAAd,GAAmB,YAAjD;AACGA,oBAAcR,QAAd,GAAyB,8BAAC,sBAAD,IAAwB,gBAAgBA,QAAxC;AAD5B,KADF;AAIE;AAAA;AAAA,QAAI,KAAI,YAAR;AAAA;AAAwBG,gBAAxB;AAAA;AAAA,KAJF;AAKE;AAAA;AAAA,QAAI,KAAI,SAAR,EAAkB,WAAWI,UAAU,OAAV,GAAoB,EAAjD;AAEIA,gBACE;AAAA;AAAA;AACE,6CAAG,WAAU,gBAAb,EAA8B,iBAAc,cAA5C,GADF;AAAA;AAGGM;AAHH,OADF,GAME;AAAA;AAAA;AAAOP,eAAP;AAAA;AAAA;AARN,KALF;AAgBE;AAAA;AAAA,QAAI,KAAI,OAAR;AAAA;AAAkBF,sBAAgBC,eAAlC;AAAA;AAAA,KAhBF;AAiBE;AAAA;AAAA,QAAI,KAAI,SAAR;AAAA;AAAoBD,mBAApB;AAAA;AAAA,KAjBF;AAkBE;AAAA;AAAA,QAAI,KAAI,WAAR;AAAA;AAAsBC,qBAAtB;AAAA;AAAA;AAlBF,GADF;AAsBA;AACD","file":"coverage-file-table-row.js","sourcesContent":["'use strict';\n\n// @flow\n\nimport React from 'react';\n\nfunction LinkToSourceFileReport(props: {targetFilename: string}) {\n  const filename = props.targetFilename;\n  const href = `sourcefiles/${filename}.html`;\n  return <a href={href}>{filename}</a>;\n}\n\nexport default function FlowCoverageFileTableRow(\n  props: {\n    filename: string,\n    annotation: string,\n    covered_count: number,\n    uncovered_count: number,\n    percent: number,\n    disableLink: boolean,\n    threshold: number,\n    isError: boolean,\n    flowCoverageError: ?string,\n    flowCoverageParsingError: ?string,\n    flowCoverageException: ?string,\n    flowCoverageStderr: ?string|?Buffer,\n  }\n) {\n  /* eslint-disable camelcase */\n  const {\n    filename,\n    annotation,\n    covered_count,\n    uncovered_count,\n    percent,\n    isError,\n    disableLink,\n    threshold\n  } = props;\n\n  const isFlow = annotation === 'flow';\n  const aboveThreshold = percent >= threshold;\n  let className = (!isError && isFlow && aboveThreshold) ?\n    'positive' : 'negative';\n\n  let errorPopup;\n\n  if (isError) {\n    className = 'error';\n    let errorType;\n    let errorContent;\n\n    if (props.flowCoverageError) {\n      errorType = 'flow coverage';\n      errorContent = <pre>{props.flowCoverageError}</pre>;\n    }\n\n    if (props.flowCoverageParsingError) {\n      errorType = 'JSON Parsing';\n      errorContent = <pre>{props.flowCoverageParsingError}</pre>;\n    }\n\n    if (props.flowCoverageException) {\n      errorType = 'Flow command unexpected error';\n      errorContent = <pre>{props.flowCoverageException}</pre>;\n    }\n\n    if (props.flowCoverageStderr) {\n      errorType = 'Flow command stderr';\n      errorContent = <pre>{props.flowCoverageStderr}</pre>;\n    }\n\n    errorPopup = (\n      <div className=\"ui popup\">\n        <div className=\"header\">Flow Error: {errorType}</div>\n        <div>{errorContent}</div>\n      </div>\n    );\n  }\n\n  return (\n    <tr key={filename} className={className}>\n      <td key=\"filename\" className={disableLink ? '' : 'selectable'}>\n        {disableLink ? filename : <LinkToSourceFileReport targetFilename={filename}/>}\n      </td>\n      <td key=\"annotation\"> @{annotation} </td>\n      <td key=\"percent\" className={isError ? 'error' : ''}>\n        {\n          isError ?\n            <span>\n              <i className=\"attention icon\" data-position=\"bottom right\"/>\n              Error\n              {errorPopup}\n            </span> :\n            <span>{percent} %</span>\n        }\n      </td>\n      <td key=\"total\"> {covered_count + uncovered_count} </td>\n      <td key=\"covered\"> {covered_count} </td>\n      <td key=\"uncovered\"> {uncovered_count} </td>\n    </tr>\n  );\n  /* eslint-enable camelcase */\n}\n"]}