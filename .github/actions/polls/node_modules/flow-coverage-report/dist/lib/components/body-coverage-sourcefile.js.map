{"version":3,"sources":["../../../src/lib/components/body-coverage-sourcefile.jsx"],"names":["HTMLReportBodySourceFile","FlowCoverageLocsForm","props","uncovered_locs","concat","map","loc","i","text","start","line","column","join","end","value","fileName","fileContent","Error","coverageData","coverageSummaryData","percent","threshold","expressions","covered_count","uncovered_count","summaryRelLink","meterBar","htmlTemplateOptions","showMeterBar","disableLink","filename","annotation","flowCoverageParsingError","flowCoverageError","flowCoverageException","flowCoverageStderr","isError","textAlign","String","display","JSON","stringify"],"mappings":"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","file":"body-coverage-sourcefile.js","sourcesContent":["'use strict';\n\n// @flow\n\nimport React from 'react';\n\n/* eslint-disable import/no-unresolved */\nimport HTMLReportFooter from './footer';\nimport FlowCoverageFileTableHead from './coverage-file-table-head';\nimport FlowCoverageFileTableRow from './coverage-file-table-row';\nimport FlowCoverageMeterBar from './coverage-meter-bar';\n\nimport type {\n  FlowCoverageSourceFileReportProps,\n  FlowUncoveredLocsProps\n} from './html-report-page';\n/* eslint-enable */\n\nfunction FlowCoverageLocsForm(props: FlowUncoveredLocsProps) {\n  const uncovered_locs = props.uncovered_locs; // eslint-disable-line camelcase\n\n  return (\n    <div className=\"ui form\">\n      <div className=\"fields\">\n        <div key=\"uncovered-locs-dropdown\" className=\"sixteen wide inline field\">\n          <select className=\"ui search dropdown uncovered-locations\">\n            {\n              [\n                <option key=\"placeholder\" value=\"\">Uncovered Locations</option>\n              ].concat(\n                uncovered_locs.map((loc, i) => { // eslint-disable-line camelcase\n                  const text =\n                    'Start: ' + [loc.start.line, loc.start.column].join(',') + ' - ' +\n                    'End: ' + [loc.end.line, loc.end.column].join(',');\n                  const value = loc.start.line;\n\n                  /* eslint-disable react/no-array-index-key */\n                  return (\n                    <option key={i} value={value}>\n                      {text}\n                    </option>\n                  );\n                  /* eslint-enable react/no-array-index-key */\n                })\n              )\n            }\n          </select>\n        </div>\n        <div key=\"syntax-highlighting-dropdown\" className=\"four wide inline field\">\n          <select className=\"ui search dropdown syntax-highlighting\">\n            <option key=\"es\" value=\"es\">ES6/ES7</option>\n            <option key=\"js\" value=\"js\">JavaScript</option>\n            <option key=\"no\" value=\"no\">None</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function HTMLReportBodySourceFile(props: FlowCoverageSourceFileReportProps) {\n  const {fileName, fileContent} = props;\n  if (!fileName) {\n    throw new Error('Missing fileName in props');\n  }\n\n  const {coverageData, coverageSummaryData} = props;\n  if (!coverageData || !coverageSummaryData) {\n    throw new Error('Missing coverage data props');\n  }\n  const {percent} = coverageData;\n\n  const threshold = coverageSummaryData.threshold;\n\n  if (!threshold) {\n    throw new Error('Missing threshold in coverageSummaryData');\n  }\n\n  const {\n    covered_count, uncovered_count, uncovered_locs // eslint-disable-line camelcase\n  } = coverageData.expressions;\n\n  const {summaryRelLink} = props;\n\n  let meterBar;\n\n  if (props.htmlTemplateOptions && props.htmlTemplateOptions.showMeterBar) {\n    meterBar = <FlowCoverageMeterBar percent={percent} threshold={threshold}/>;\n  }\n\n  return (\n    <body>\n      <div className=\"ui grid container\">\n        <div className=\"row\">\n          <div className=\"twelve wide column\">\n            <h2 className=\"ui header\">\n              <a href={summaryRelLink} id=\"link-to-summary\">\n                Flow Coverage Report\n              </a>\n            </h2>\n          </div>\n        </div>\n        <div className=\"row\">\n          <table className=\"ui small celled unstackable table\">\n            <FlowCoverageFileTableHead/>\n            <tbody>\n              <FlowCoverageFileTableRow\n                {...{\n                  disableLink: true,\n                  filename: fileName,\n                  annotation: coverageData.annotation,\n                  flowCoverageParsingError: coverageData.flowCoverageParsingError,\n                  flowCoverageError: coverageData.flowCoverageError,\n                  flowCoverageException: coverageData.flowCoverageException,\n                  flowCoverageStderr: coverageData.flowCoverageStderr,\n                  isError: coverageData.isError,\n                  percent,\n                  threshold,\n                  /* eslint-disable camelcase */\n                  covered_count,\n                  uncovered_count\n                  /* eslint-enable camelcase */\n                }}\n                />\n            </tbody>\n          </table>\n        </div>\n        {\n          meterBar\n        }\n        <div className=\"row ui one column centered grid\">\n          <div className=\"column\" style={{textAlign: 'left'}}>\n            <div className=\"row\">\n              <FlowCoverageLocsForm\n                uncovered_locs={\n                  uncovered_locs // eslint-disable-line camelcase\n                }\n                />\n            </div>\n            <textarea readOnly id=\"file-content\" value={String(fileContent)}/>\n          </div>\n        </div>\n        <div className=\"row centered\">\n          <HTMLReportFooter {...props}/>\n        </div>\n\n      </div>\n      <pre id=\"file-coverage-data\" style={{display: 'none'}}>\n        {JSON.stringify(coverageData)}\n      </pre>\n    </body>\n  );\n}\n"]}